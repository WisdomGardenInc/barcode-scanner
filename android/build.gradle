ext {
    junitVersion =  project.hasProperty('junitVersion') ? rootProject.ext.junitVersion : '4.12'
    androidxAppCompatVersion =  project.hasProperty('androidxAppCompatVersion') ? rootProject.ext.androidxAppCompatVersion : '1.2.0'
    androidxJunitVersion =  project.hasProperty('androidxJunitVersion') ? rootProject.ext.androidxJunitVersion : '1.1.1'
    androidxEspressoCoreVersion =  project.hasProperty('androidxEspressoCoreVersion') ? rootProject.ext.androidxEspressoCoreVersion : '3.2.0'
}

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.1'
    }
}

apply plugin: 'com.android.library'

android {
    buildToolsVersion  project.hasProperty('buildToolsVersion ') ? rootProject.ext.buildToolsVersion  : '28.0.3'
    compileSdkVersion project.hasProperty('compileSdkVersion') ? rootProject.ext.compileSdkVersion : 29
    defaultConfig {
        minSdkVersion project.hasProperty('minSdkVersion') ? rootProject.ext.minSdkVersion : 21
        targetSdkVersion project.hasProperty('targetSdkVersion') ? rootProject.ext.targetSdkVersion : 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}


// 获取nexus 的账号和密码
def getNexusInfo() {
    def nexusName = System.getenv('NEXUS_NAME');
    def nexusPassword = System.getenv('NEXUS_PASSWORD')
    File secretPropsFile = project.rootProject.file('local.properties')
    if (secretPropsFile.exists()) {
        FileInputStream inputStream = null
        try {
            inputStream = new FileInputStream(secretPropsFile)
            Properties p = new Properties()
            p.load(inputStream)
            nexusName = p.getProperty('NEXUS_NAME') ?: nexusName
            nexusPassword = p.getProperty('NEXUS_PASSWORD') ?: nexusPassword
        } catch (IOException e) {
            throw new GradleException("Error reading file: ${secretPropsFile.absolutePath}", e)
        } finally {
            if (inputStream != null) {
                try {
                    inputStream.close()
                } catch (IOException e) {
                    // ignore
                }
            }
        }
    }
    return [nexusName, nexusPassword]
}

def (nexusName, nexusPassword) = getNexusInfo();

repositories {
    google()
    jcenter()
    mavenCentral()
    maven {
        url "http://nexus.tronclass.com.cn:8081/repository/wg"
        credentials {
            username nexusName ?: ''
            password nexusPassword ?: ''
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation('com.wisdomgarden:zxing-android-embedded:1.1.0') { transitive = false }
    implementation 'com.google.zxing:core:3.3.0'
}
